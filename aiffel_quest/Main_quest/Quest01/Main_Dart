import 'package:flutter/material.dart';
import 'package:audioplayers/audioplayers.dart';

void main() {
  runApp(const PianoApp()); 
}

class PianoApp extends StatelessWidget {
  const PianoApp({Key? key}) : super(key: key);
  static AudioCache player = AudioCache(prefix: 'notes/'); // 오디오 플레이어를 초기화

  void playAudio(String fileName) {
    player.play(fileName); // 오디오 파일을 재생하는 함수
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: SafeArea(
          child: Column(
            children: [
              PianoButton(
                label: 'B3',
                onSecondWhitePress: () {
                  playAudio('b3.mp3'); 
                },
              ),
              PianoButtonSuperKey(
                whiteLabel: 'C4',
                blackLabel: 'C#4',
                onBlackPress: () {
                  playAudio('c4.mp3'); 
                },
                onWhitePress: () {
                  playAudio('c4.mp3'); 
                },
              ),
              PianoButtonSuperKey(
                whiteLabel: 'D4',
                blackLabel: 'D#4',
                onBlackPress: () {
                  playAudio('d4.mp3'); 
                },
                onWhitePress: () {
                  playAudio('d4.mp3'); 
                },
              ),
              PianoButton(
                label: 'E4',
                onSecondWhitePress: () {
                  playAudio('e4.mp3'); 
                },
              ),
              PianoButtonSuperKey(
                whiteLabel: 'F4',
                blackLabel: 'F#4',
                onBlackPress: () {
                  playAudio('f4.mp3'); 
                },
                onWhitePress: () {
                  playAudio('f4.mp3'); 
                },
              ),
              PianoButtonSuperKey(
                whiteLabel: 'G4',
                blackLabel: 'G#4',
                onBlackPress: () {
                  playAudio('g4.mp3'); 
                },
                onWhitePress: () {
                  playAudio('g4.mp3'); 
                },
              ),
              PianoButton(
                label: 'H4',
                onSecondWhitePress: () {
                  playAudio('c6.mp3'); 
                },
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class PianoButtonSuperKey extends StatelessWidget {
  final VoidCallback onWhitePress;
  final VoidCallback onBlackPress;
  final String whiteLabel;
  final String blackLabel;

  PianoButtonSuperKey({
    Key? key,
    required this.onWhitePress,
    required this.onBlackPress,
    required this.whiteLabel,
    required this.blackLabel,
  }) : super(key: key);

  final ButtonStyle whiteButtonStyle = ElevatedButton.styleFrom(
    backgroundColor: Colors.white60, // 흰색 키의 배경색을 설정
    side: BorderSide.none,
    shape: const RoundedRectangleBorder(
      borderRadius: BorderRadius.zero,
    ),
  );

  final ButtonStyle blackButtonStyle = ElevatedButton.styleFrom(
    backgroundColor: Colors.black, // 검은색 키의 배경색을 설정
  );

  @override
  Widget build(BuildContext context) {
    return Expanded(
      child: Stack(
        clipBehavior: Clip.none,
        children: [
          Padding(
            padding: const EdgeInsets.all(0.0),
            child: Container(
              decoration: BoxDecoration(
                border: Border.all(),
              ),
              height: double.infinity,
              width: double.infinity,
              child: ElevatedButton(
                style: whiteButtonStyle,
                onPressed: onWhitePress,
                child: Text(whiteLabel), // 흰색 키의 레이블을 설정
              ),
            ),
          ),
          Positioned(
            top: -25.0,
            child: Container(
              height: 75.0,
              width: 250.0,
              child: ElevatedButton(
                style: blackButtonStyle,
                onPressed: onBlackPress,
                child: Text(blackLabel,
                    style: TextStyle(color: Colors.white)), // 검은색 키의 레이블을 설정
              ),
            ),
          ),
        ],
      ),
    );
  }
}

class PianoButton extends StatelessWidget {
  final VoidCallback onSecondWhitePress;
  final String label;

  PianoButton({
    Key? key,
    required this.onSecondWhitePress,
    required this.label,
  }) : super(key: key);

  final ButtonStyle style2 = ElevatedButton.styleFrom(
    backgroundColor: Colors.white60, // 흰색 키의 배경색을 설정
    side: BorderSide.none,
    shape: const RoundedRectangleBorder(
      borderRadius: BorderRadius.zero,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Expanded(
      flex: 1,
      child: Padding(
        padding: const EdgeInsets.all(0.0),
        child: Container(
          decoration: BoxDecoration(
            border: Border.all(),
          ),
          height: double.infinity,
          width: double.infinity,
          child: ElevatedButton(
            style: style2,
            onPressed: onSecondWhitePress,
            child: Text(label), // 흰색 키의 레이블을 설정
          ),
        ),
      ),
    );
  }
}
